# Default values for postgrest.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: postgrest/postgrest
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v12.2.8"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 4000

headerless:
  type: NodePort
  nodePort: 32480

ingress:
  enabled: false
  className: ""
  labels: {}
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: #{}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

database:
  postgresUser: api_ser
  postgresPassword: dyjednzDrTKYvVJ0MuM6
  postgresDb: datawarehouse
  postgresHostname: 10.90.10.151
  postgresPort: 6000
  dbUri: ""
  existingSecret:

env:
  dbSchema: rest_api
  dbPool: 120
  serverPort: 4000
  allowCors: true

extraEnv:
  API_URL: "http://postrest-app-service.postrest:4000/"
  PGRST_CORS_ALLOW_ORIGIN: "*"
  PGRST_CORS_ALLOW_HEADERS: "Authorization,Content-Type"
  PGRST_CORS_ALLOW_CREDENTIALS: "true"