apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dev-chatai.fullname" . }}
  namespace: chatai
  labels:
    {{- include "dev-chatai.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "dev-chatai.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "dev-chatai.selectorLabels" . | nindent 8 }}
    spec:
      imagePullSecrets:
        - name: dockerhub
      serviceAccountName: {{ include "dev-chatai.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if and .Values.proxy.enable (.Values.proxy.http) (.Values.proxy.https) (.Values.proxy.no_proxy) }}
          env:
            - name: http_proxy
              value: "{{ .Values.proxy.http | default "" }}"
            - name: https_proxy
              value: "{{ .Values.proxy.https | default "" }}"
            - name: no_proxy
              value: "{{ .Values.proxy.no_proxy | default "" }}"
          {{- end }}
          ports:
            - name: http
              containerPort: 8084
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.pvc.name }}
  namespace: {{ .Values.namespace }}
spec:
  accessModes:
    - {{ .Values.pvc.accessMode }}
  resources:
    requests:
      storage: {{ .Values.pvc.storage }}
  storageClassName: {{ .Values.pvc.storageClassName }}